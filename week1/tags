!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BOTTOM_BOUNDARY	puzzle_solver.cpp	11;"	d	file:
GatherMeta	puzzle_solver.cpp	/^void GatherMeta()$/;"	f
LEFT_BOUNDARY	puzzle_solver.cpp	10;"	d	file:
PUZZLE_COLS	puzzle_solver.cpp	7;"	d	file:
PUZZLE_ROWS	puzzle_solver.cpp	6;"	d	file:
RIGHT_BOUNDARY	puzzle_solver.cpp	12;"	d	file:
SearchForWords	puzzle_solver.cpp	/^void SearchForWords()$/;"	f
SearchRight	puzzle_solver.cpp	/^void SearchRight(const std::string & word, struct character_position position)$/;"	f
SearchUp	puzzle_solver.cpp	/^void SearchUp(const std::string & word, struct character_position position)$/;"	f
TOP_BOUNDARY	puzzle_solver.cpp	9;"	d	file:
character_position	puzzle_solver.cpp	/^  character_position(int x, int y) : x(x), y(y) {}$/;"	f	struct:character_position
character_position	puzzle_solver.cpp	/^struct character_position$/;"	s	file:
character_positions	puzzle_solver.cpp	/^std::map<char, std::vector<struct character_position>> character_positions;$/;"	v
main	puzzle_solver.cpp	/^int main()$/;"	f
puzzle	puzzle_solver.cpp	/^char puzzle[PUZZLE_ROWS][PUZZLE_COLS] = {$/;"	v
x	puzzle_solver.cpp	/^  int x;$/;"	m	struct:character_position	file:
y	puzzle_solver.cpp	/^  int y;$/;"	m	struct:character_position	file:
