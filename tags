!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BOTTOM_BOUNDARY	week1/puzzle_solver.cpp	22;"	d	file:
Collection	week1/collection.cpp	/^    Collection(const Collection & rhs)$/;"	f	class:Collection
Collection	week1/collection.cpp	/^    Collection(std::size_t size)$/;"	f	class:Collection
Collection	week1/collection.cpp	/^class Collection$/;"	c	file:
GatherCharacterPositions	week1/puzzle_solver.cpp	/^void GatherCharacterPositions()$/;"	f
HEADER1_INCLUDED	week1/header1.h	2;"	d
HEADER2_INCLUDED	week1/header2.h	2;"	d
LEFT_BOUNDARY	week1/puzzle_solver.cpp	21;"	d	file:
LargeObject	week2/2.4.cpp	/^  LargeObject(int x) : x(x) {$/;"	f	struct:LargeObject
LargeObject	week2/2.4.cpp	/^struct LargeObject$/;"	s	file:
PUZZLE_COLS	week1/puzzle_solver.cpp	18;"	d	file:
PUZZLE_ROWS	week1/puzzle_solver.cpp	17;"	d	file:
RIGHT_BOUNDARY	week1/puzzle_solver.cpp	23;"	d	file:
SearchDown	week1/puzzle_solver.cpp	/^void SearchDown(const std::string & word, struct position position)$/;"	f
SearchDownLeft	week1/puzzle_solver.cpp	/^void SearchDownLeft(const std::string & word, struct position position)$/;"	f
SearchDownRight	week1/puzzle_solver.cpp	/^void SearchDownRight(const std::string & word, struct position position)$/;"	f
SearchForWords	week1/puzzle_solver.cpp	/^void SearchForWords()$/;"	f
SearchLeft	week1/puzzle_solver.cpp	/^void SearchLeft(const std::string & word, struct position position)$/;"	f
SearchRight	week1/puzzle_solver.cpp	/^void SearchRight(const std::string & word, struct position position)$/;"	f
SearchUp	week1/puzzle_solver.cpp	/^void SearchUp(const std::string & word, struct position position)$/;"	f
SearchUpLeft	week1/puzzle_solver.cpp	/^void SearchUpLeft(const std::string & word, struct position position)$/;"	f
SearchUpRight	week1/puzzle_solver.cpp	/^void SearchUpRight(const std::string & word, struct position position)$/;"	f
StringGreaterThanComparator	week1/find_max.cpp	/^class StringGreaterThanComparator$/;"	c	file:
StringLessThanComparator	week1/find_max.cpp	/^class StringLessThanComparator$/;"	c	file:
Summation	week2/2.4.cpp	/^R Summation(std::uint32_t from, std::uint32_t to, std::function<R(N)> fn)$/;"	f
TOP_BOUNDARY	week1/puzzle_solver.cpp	20;"	d	file:
Thing	week1/collection.cpp	/^    Thing() : x(0) {}$/;"	f	class:Thing
Thing	week1/collection.cpp	/^    Thing(int x) : x(x) {}$/;"	f	class:Thing
Thing	week1/collection.cpp	/^class Thing$/;"	c	file:
TimeThing	week1/header2.h	/^struct TimeThing$/;"	s
boundsCheck	week1/collection.cpp	/^    void boundsCheck(std::size_t index) const$/;"	f	class:Collection	file:
character_positions	week1/puzzle_solver.cpp	/^std::map<char, std::vector<struct position>> character_positions;$/;"	v
find	week1/find_max.cpp	/^const T & find(const std::vector<T> & set, Comparator comparator)$/;"	f
gcd	week2/2.4.cpp	/^std::int64_t gcd(std::int64_t m, std::int64_t n) {$/;"	f
getReference	week2/2.4.cpp	/^LargeObject & getReference(std::vector<LargeObject> & arr)$/;"	f
hours	week1/header2.h	/^  int hours;$/;"	m	struct:TimeThing
insert	week1/collection.cpp	/^    void insert(T object)$/;"	f	class:Collection
isEmpty	week1/collection.cpp	/^    bool isEmpty() const$/;"	f	class:Collection
isHeader	week1/parse_includes.cpp	/^bool isHeader(const std::string & line, std::string & filepath)$/;"	f
main	week1/collection.cpp	/^int main()$/;"	f
main	week1/find_max.cpp	/^int main()$/;"	f
main	week1/parse_includes.cpp	/^int main(int argc, char **argv)$/;"	f
main	week1/permutations.cpp	/^int main()$/;"	f
main	week1/puzzle_solver.cpp	/^int main()$/;"	f
main	week2/2.4.cpp	/^int main()$/;"	f
minutes	week1/header2.h	/^  int minutes;$/;"	m	struct:TimeThing
operator ()	week1/find_max.cpp	/^    bool operator()(const std::string & s1, const std::string & s2)$/;"	f	class:StringGreaterThanComparator
operator ()	week1/find_max.cpp	/^    bool operator()(const std::string & s1, const std::string & s2)$/;"	f	class:StringLessThanComparator
operator []	week1/collection.cpp	/^    const T & operator[](std::size_t index) const$/;"	f	class:Collection
parseFile	week1/parse_includes.cpp	/^void parseFile(const std::string & filepath)$/;"	f
permute	week1/permutations.cpp	/^void permute(char * a, int l, int r)$/;"	f
position	week1/collection.cpp	/^    std::size_t position;$/;"	m	class:Collection	file:
position	week1/puzzle_solver.cpp	/^  position(int x, int y) : x(x), y(y) {}$/;"	f	struct:position
position	week1/puzzle_solver.cpp	/^struct position$/;"	s	file:
puzzle	week1/puzzle_solver.cpp	/^char puzzle[PUZZLE_ROWS][PUZZLE_COLS] = {$/;"	v
remove	week1/collection.cpp	/^    void remove(std::size_t index)$/;"	f	class:Collection
seconds	week1/header2.h	/^  int seconds;$/;"	m	struct:TimeThing
size	week1/collection.cpp	/^    std::size_t size;$/;"	m	class:Collection	file:
storage	week1/collection.cpp	/^    T * storage = nullptr;$/;"	m	class:Collection	file:
swap	week1/permutations.cpp	/^void swap(char *x, char *y)$/;"	f
validateSize	week1/collection.cpp	/^    void validateSize()$/;"	f	class:Collection	file:
x	week1/collection.cpp	/^    int x;$/;"	m	class:Thing	file:
x	week1/puzzle_solver.cpp	/^  int x;$/;"	m	struct:position	file:
x	week2/2.4.cpp	/^  int x;$/;"	m	struct:LargeObject	file:
y	week1/puzzle_solver.cpp	/^  int y;$/;"	m	struct:position	file:
~Collection	week1/collection.cpp	/^    ~Collection()$/;"	f	class:Collection
